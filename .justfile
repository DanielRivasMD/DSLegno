####################################################################################################

_default:
  @just --list

####################################################################################################

# print justfile
[group('just')]
@show:
  bat .justfile --language make

####################################################################################################

# edit justfile
[group('just')]
@edit:
  micro .justfile

####################################################################################################
# aliases
####################################################################################################

####################################################################################################
# import
####################################################################################################

# config
import '.just/rs.conf'

####################################################################################################
# jobs
####################################################################################################

# check
[group('rust')]
@check:
  cargo watch --clear --why --exec check

####################################################################################################

# diagnose clippy
[group('rust')]
@clippy:
  cargo watch --clear --shell 'cargo clippy'

####################################################################################################

# test list
[group('rust')]
@test-list:
  cargo watch --clear --shell 'cargo nextest list'

####################################################################################################

# test run
[group('rust')]
@test-run:
  cargo watch --clear --shell 'cargo nextest run'

####################################################################################################

# build
[group('rust')]
@debug:
  @echo "\n\033[1;33mBuilding\033[0;37m...\n=================================================="
  cargo build

####################################################################################################

# build release
[group('rust')]
@build:
  @echo "\n\033[1;33mBuilding\033[0;37m...\n=================================================="
  cargo clean; cargo build --release

####################################################################################################

# format rustfmt
[group('rust')]
@fmt:
  @echo "\n\033[1;33mFormating\033[0;37m...\n=================================================="
  rustfmt +nightly src/*rs
  rustfmt +nightly tests/*rs

####################################################################################################

# print help
[group('rust')]
@help:
  @echo "\n\033[1;33mPrinting\033[0;37m...\n=================================================="
  cargo run -- --help

####################################################################################################

# launch dioxus
[group('rust')]
@launch:
  dx serve --hot-reload true --platform desktop

####################################################################################################

# run acquista
[group('rust')]
@acquista:
  cargo run --bin acquista -- data/acquisto.xml

####################################################################################################

# run vendita
[group('rust')]
@vendita:
  cargo run --bin vendita -- data/vendita.xml

####################################################################################################
